# SPDX-FileCopyrightText: 2021 ladyada for Adafruit Industries
# SPDX-License-Identifier: MIT

import time
import board
import neopixel

import terminalio
import displayio

import mc3479 as MC3479
#from adafruit_bus_device import i2c_device

# On CircuitPlayground Express, and boards with built in status NeoPixel -> board.NEOPIXEL
# Otherwise choose an open pin connected to the Data In of the NeoPixel strip, i.e. board.D1
pixel_pin = board.NEOPIXEL

# On a Raspberry pi, use this instead, not all pins are supported
# pixel_pin = board.D18

# The number of NeoPixels
num_pixels = 10

# The order of the pixel colors - RGB or GRB. Some NeoPixels have red and green reversed!
# For RGBW NeoPixels, simply change the ORDER to RGBW or GRBW.
ORDER = neopixel.GRB

pixels = neopixel.NeoPixel(
    pixel_pin, num_pixels, brightness=0.2, auto_write=False, pixel_order=ORDER
)

i2c = board.I2C()  # uses board.SCL and board.SDA
mc3479 = MC3479.MC3479(i2c)
mc3479.acceleration_output_data_rate = MC3479.BANDWIDTH_100
mc3479.acceleration_range = MC3479.ACCEL_RANGE_4G
mc3479.lpf_enabled = MC3479.LPF_ENABLE


#while True:
    # Comment this line out if you have RGBW/GRBW NeoPixels
    #pixels.fill((255, 0, 0))
    # Uncomment this line if you have RGBW/GRBW NeoPixels
    # pixels.fill((255, 0, 0, 0))
    #pixels.show()
    #time.sleep(0.5)

    # Comment this line out if you have RGBW/GRBW NeoPixels
    #pixels.fill((0, 255, 0))
    # Uncomment this line if you have RGBW/GRBW NeoPixels
    # pixels.fill((0, 255, 0, 0))
    #pixels.show()
    #time.sleep(0.5)

    # Comment this line out if you have RGBW/GRBW NeoPixels
    #pixels.fill((0, 0, 255))
    # Uncomment this line if you have RGBW/GRBW NeoPixels
    # pixels.fill((0, 0, 255, 0))
    #pixels.show()
    #time.sleep(0.5)
sum_acc_pre = -1
while True:
    accx, accy, accz = mc3479.acceleration
    sum_acc = accx + accy + accz

    Glitch = False

    if accx < 0.05 or accy < 0.05 or accz < 0.05:
        Glitch = True

    shake = True
    diff = sum_acc_pre - sum_acc
    if (diff < 0.5 and diff > -0.5) or Glitch:
        shake = False
    print("x:{:.2f}m/s^2, y:{:.2f}m/s^2, z{:.2f}m.s^2".format(accx, accy, accz))
    print(sum_acc_pre - sum_acc)
    sum_acc_pre = sum_acc

    if shake:
        pixels.fill((0, 0, 255))
        pixels.show()
    else:
        pixels.fill((0, 255, 0))
        pixels.show()

    time.sleep(0.5)

    #rainbow_cycle(0.001)  # rainbow cycle with 1ms delay per step
